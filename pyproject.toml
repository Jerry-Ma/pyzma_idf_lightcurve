[project]
name = "pyzma_idf_lightcurve"
dynamic = ["version"]
description = "Package to build and examine IDF lightcurves."
readme = "README.md"
authors = [
  { name = "Zhiyuan Ma", email = "zhiyuanma@umass.edu" },
]
maintainers = [
  { name = "Zhiyuan Ma", email = "zhiyuanma@umass.edu" },
]
license = "BSD-3-Clause"
license-files = ["LICENSE"]
requires-python = ">= 3.11"
classifiers = [
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = ["typer"]

[project.optional-dependencies]
test = ["pytest", "coverage"]

dev = [
  "pyzma_idf_lightcurve[test]",
  "pre-commit",
  "ruff",
  "ty",
  "pandas-stubs",
  "narwhals",
  "ipdb",
  "myst-parser",
  "sphinx",
  "sphinx-astropy[confv2]",
  "sphinx-copybutton",
  "sphinx_book_theme",
  "autodoc_pydantic[erdantic]",
  "mkdocs",
]

[project.urls]
bugs = "https://github.com/Jerry-Ma/pyzma_idf_lightcurve/issues"
changelog = "https://github.com/Jerry-Ma/pyzma_idf_lightcurve/blob/master/changelog.md"
homepage = "https://github.com/Jerry-Ma/pyzma_idf_lightcurve"

[project.scripts]
pyzma_idf_lightcurve = "pyzma_idf_lightcurve.cli:app"

[build-system]
requires = ["setuptools>=80", "setuptools_scm>=8"]
build-backend = 'setuptools.build_meta'

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"*" = [
  "data/*",
  "data/*/*",
  "data/*/*/*",
  "data/*/*/*/*",
  "data/*/*/*/*/*",
  "data/*/*/*/*/*/*",
]

[tool.setuptools_scm]
version_file = "src/pyzma_idf_lightcurve/_version.py"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests", "docs"]
norecursedirs = [".*", "docs[\\/]_build", "docs[\\/]generated"]
remote_data_strict = true
addopts = [
  "-ra",
  "--color=yes",
  "--doctest-rst",
  "--strict-config",
  "--strict-markers",
  "-p no:legacypath",
]
log_cli_level = "info"
xfail_strict = true
filterwarnings = ["error"]

[tool.ty]
# All rules are enabled as "error" by default; no need to specify unless overriding.
# Example override: relax a rule for the entire project (uncomment if needed).
# rules.TY015 = "warn"  # For invalid-argument-type, warn instead of error.

[tool.ruff]
line-length = 88
exclude = ["src/pyzma_idf_lightcurve/_version.py"]
lint.select = ["ALL"]
lint.ignore = [
  # flake8-builtins (A) : shadowing a Python built-in.
  # New ones should be avoided and is up to maintainers to enforce.
  "A00",
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = [
  "D",      # pydocstyle
  "ERA001", # commented out code
]

"docs/conf.py" = [
  "D",      # pydocstyle
  "ERA001", # commented out code
]

[tool.ruff.lint.flake8-annotations]
ignore-fully-untyped = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"


[tool.repo-review]
ignore = [
  "PY007", # ignore task runner
  "PC111", # ignore blacken-docs
  "PC140", # ignore type checker
  "PC180", # ignore markdown formatter
  "PC901", # ignore custom update message
  "MY",    # ignore mypy
  "RTD",   # ignore RTD
  "SCFG",  # ignore setup.cfg
]

[tool.uv]
package = true
cache-keys = [
  { file = "pyproject.toml" },
  { git = { commit = true, tags = true } },
]

[tool.cruft]
skip = [".git"]
